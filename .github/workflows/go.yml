name: Build and Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v2
    - run: |
        output=$(python extract.py ${{ github.ref }})
        output="${output//'%'/'%25'}"
        output="${output//$'\n'/'%0A'}"
        output="${output//$'\r'/'%0D'}"
        echo "::set-output name=changelog::$output"
      id: get_changelog

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ${{ steps.get_changelog.outputs.changelog }}
        draft: true
        prerelease: false

  build-win:
    runs-on: windows-latest
    needs: build-linux
    steps:
    - uses: actions/checkout@v2

    - name: Install mingw
      run: choco install mingw

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
        
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.2.0
      
    - name: Install wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      
    - name: Build
      run: wails build -f

    - name: upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ needs.build-linux.outputs.url }}
        asset_path: ./build/jwrd.exe
        asset_name: jwrd-windows-amd64.exe
        asset_content_type: vnd.microsoft.portable-executable

  build-mac:
    runs-on: macos-latest
    needs: build-linux
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
        
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.2.0
      
    - name: Install wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      
    - name: Build
      run: wails build -f

    - name: upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ needs.build-linux.outputs.url }}
        asset_path: ./build/jwrd
        asset_name: jwrd-mac-amd64
        asset_content_type: applefile
